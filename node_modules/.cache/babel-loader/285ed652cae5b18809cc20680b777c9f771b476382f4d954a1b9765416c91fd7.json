{"ast":null,"code":"var _jsxFileName = \"/Users/nikolayvalkov/work/my-location/src/App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [lon, setLon] = useState();\n  const [lat, setLat] = useState();\n  const [error, setError] = useState({\n    message: null\n  });\n  const loading = !lon || !lat ? true : false;\n  console.log(\"Navigator: \", navigator.permissions.query());\n  //Set geolocation coordinates\n  const setCoordinates = (lon, lat) => {\n    setLon(lon);\n    setLat(lat);\n  };\n  const getLocationSuccessfully = position => {\n    const freshLong = position.coords.longitude.toFixed(7);\n    const freshLat = position.coords.latitude.toFixed(7);\n\n    //If the coordinates are changed update them\n    if (freshLong !== lon || freshLat !== lat) {\n      setCoordinates(freshLong, freshLat);\n    }\n  };\n  const getLocationIssue = e => {\n    setError(e);\n  };\n  useEffect(() => {\n    const timer = setInterval(() => {\n      navigator.geolocation.getCurrentPosition(getLocationSuccessfully, getLocationIssue, {\n        enableHighAccuracy: false,\n        maximumAge: 0,\n        timeout: 4000\n      });\n    }, 5000);\n    return () => {\n      clearInterval(timer);\n    };\n  });\n  const handledLog = error !== null && error !== void 0 && error.message ? error.message : loading ? \"Loading...\" : \"Lon: \" + lon + \" | \" + \"Lat: \" + lat;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: handledLog\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 3\n  }, this);\n}\n_s(App, \"l35oRVzBrzsvr2gyDtVd5qY+75U=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","App","_s","lon","setLon","lat","setLat","error","setError","message","loading","console","log","navigator","permissions","query","setCoordinates","getLocationSuccessfully","position","freshLong","coords","longitude","toFixed","freshLat","latitude","getLocationIssue","e","timer","setInterval","geolocation","getCurrentPosition","enableHighAccuracy","maximumAge","timeout","clearInterval","handledLog","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/nikolayvalkov/work/my-location/src/App.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport \"./App.css\";\n\nfunction App() {\n\tconst [lon, setLon] = useState();\n\tconst [lat, setLat] = useState();\n\tconst [error, setError] = useState({ message: null });\n\n\tconst loading = !lon || !lat ? true : false;\n\tconsole.log(\"Navigator: \", navigator.permissions.query());\n\t//Set geolocation coordinates\n\tconst setCoordinates = (lon, lat) => {\n\t\tsetLon(lon);\n\t\tsetLat(lat);\n\t};\n\n\tconst getLocationSuccessfully = (position) => {\n\t\tconst freshLong = position.coords.longitude.toFixed(7);\n\t\tconst freshLat = position.coords.latitude.toFixed(7);\n\n\t\t//If the coordinates are changed update them\n\t\tif (freshLong !== lon || freshLat !== lat) {\n\t\t\tsetCoordinates(freshLong, freshLat);\n\t\t}\n\t};\n\n\tconst getLocationIssue = (e) => {\n\t\tsetError(e);\n\t};\n\n\tuseEffect(() => {\n\t\tconst timer = setInterval(() => {\n\t\t\tnavigator.geolocation.getCurrentPosition(\n\t\t\t\tgetLocationSuccessfully,\n\t\t\t\tgetLocationIssue,\n\t\t\t\t{ enableHighAccuracy: false, maximumAge: 0, timeout: 4000 }\n\t\t\t);\n\t\t}, 5000);\n\n\t\treturn () => {\n\t\t\tclearInterval(timer);\n\t\t};\n\t});\n\n\tconst handledLog = error?.message\n\t\t? error.message\n\t\t: loading\n\t\t? \"Loading...\"\n\t\t: \"Lon: \" + lon + \" | \" + \"Lat: \" + lat;\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<h1>{handledLog}</h1>\n\t\t</div>\n\t);\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGN,QAAQ,CAAC,CAAC;EAChC,MAAM,CAACO,GAAG,EAAEC,MAAM,CAAC,GAAGR,QAAQ,CAAC,CAAC;EAChC,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC;IAAEW,OAAO,EAAE;EAAK,CAAC,CAAC;EAErD,MAAMC,OAAO,GAAG,CAACP,GAAG,IAAI,CAACE,GAAG,GAAG,IAAI,GAAG,KAAK;EAC3CM,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEC,SAAS,CAACC,WAAW,CAACC,KAAK,CAAC,CAAC,CAAC;EACzD;EACA,MAAMC,cAAc,GAAGA,CAACb,GAAG,EAAEE,GAAG,KAAK;IACpCD,MAAM,CAACD,GAAG,CAAC;IACXG,MAAM,CAACD,GAAG,CAAC;EACZ,CAAC;EAED,MAAMY,uBAAuB,GAAIC,QAAQ,IAAK;IAC7C,MAAMC,SAAS,GAAGD,QAAQ,CAACE,MAAM,CAACC,SAAS,CAACC,OAAO,CAAC,CAAC,CAAC;IACtD,MAAMC,QAAQ,GAAGL,QAAQ,CAACE,MAAM,CAACI,QAAQ,CAACF,OAAO,CAAC,CAAC,CAAC;;IAEpD;IACA,IAAIH,SAAS,KAAKhB,GAAG,IAAIoB,QAAQ,KAAKlB,GAAG,EAAE;MAC1CW,cAAc,CAACG,SAAS,EAAEI,QAAQ,CAAC;IACpC;EACD,CAAC;EAED,MAAME,gBAAgB,GAAIC,CAAC,IAAK;IAC/BlB,QAAQ,CAACkB,CAAC,CAAC;EACZ,CAAC;EAED7B,SAAS,CAAC,MAAM;IACf,MAAM8B,KAAK,GAAGC,WAAW,CAAC,MAAM;MAC/Bf,SAAS,CAACgB,WAAW,CAACC,kBAAkB,CACvCb,uBAAuB,EACvBQ,gBAAgB,EAChB;QAAEM,kBAAkB,EAAE,KAAK;QAAEC,UAAU,EAAE,CAAC;QAAEC,OAAO,EAAE;MAAK,CAC3D,CAAC;IACF,CAAC,EAAE,IAAI,CAAC;IAER,OAAO,MAAM;MACZC,aAAa,CAACP,KAAK,CAAC;IACrB,CAAC;EACF,CAAC,CAAC;EAEF,MAAMQ,UAAU,GAAG5B,KAAK,aAALA,KAAK,eAALA,KAAK,CAAEE,OAAO,GAC9BF,KAAK,CAACE,OAAO,GACbC,OAAO,GACP,YAAY,GACZ,OAAO,GAAGP,GAAG,GAAG,KAAK,GAAG,OAAO,GAAGE,GAAG;EAExC,oBACCL,OAAA;IAAKoC,SAAS,EAAC,KAAK;IAAAC,QAAA,eACnBrC,OAAA;MAAAqC,QAAA,EAAKF;IAAU;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjB,CAAC;AAER;AAACvC,EAAA,CApDQD,GAAG;AAAAyC,EAAA,GAAHzC,GAAG;AAsDZ,eAAeA,GAAG;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}